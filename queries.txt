Query One: 

  Input: NONE
  
  Return: All Origin Airports
  
  Answer: db.flightroutes.distinct("origin.airport")
  
Query Two: 

  Input: Origin Airport
  
  Return: Price Range and Distance Options
  
  Answer:  db.flightroutes.aggregate([
              { 
                $match: { "origin.airport": "XXX" }  // Replace "CVG" with the desired origin airport
              },
              {
                $addFields: {
                  fares: [
                    {
                      $toDouble: {
                        $ifNull: [
                          { 
                            $cond: {
                              if: { $or: [{ $eq: [{ $trim: { input: "$averageFare" } }, ""] }, { $eq: ["$averageFare", null] }] },
                              then: null,  // Convert empty strings or null to null
                              else: "$averageFare"
                            }
                          },
                          null  // Default to null for invalid values
                        ]
                      }
                    },
                    {
                      $toDouble: {
                        $ifNull: [
                          { 
                            $cond: {
                              if: { $or: [{ $eq: [{ $trim: { input: "$lowestCarrier.fare" } }, ""] }, { $eq: ["$lowestCarrier.fare", null] }] },
                              then: null,
                              else: "$lowestCarrier.fare"
                            }
                          },
                          null
                        ]
                      }
                    },
                    {
                      $toDouble: {
                        $ifNull: [
                          { 
                            $cond: {
                              if: { $or: [{ $eq: [{ $trim: { input: "$largestCarrier.fare" } }, ""] }, { $eq: ["$largestCarrier.fare", null] }] },
                              then: null,
                              else: "$largestCarrier.fare"
                            }
                          },
                          null
                        ]
                      }
                    }
                  ]
                }
              },
              {
                $unwind: "$fares"
              },
              {
                $group: {
                  _id: "$origin.airport",  // Group by origin airport
                  maxFare: { $max: "$fares" },
                  minFare: { $min: "$fares" },
                  maxMiles: { $max: "$nsmiles" },
                  minMiles: { $min: "$nsmiles" }
                }
              },
              {
                $project: {
                  _id: 0,
                  originAirport: "$_id",
                  priceRange: {
                    maxFare: "$maxFare",
                    minFare: "$minFare"
                  },
                  distanceOptions: {
                    maxMiles: "$maxMiles",
                    minMiles: "$minMiles"
                  }
                }
              }
            ])

  
Query Three: 

  Input: Origin Airport
  
  Return: All Destination Airports from Origin
  
  Answer:  db.flightroutes.aggregate([
              { 
                $match: { "origin.airport": "XXX" }  // Replace "CVG" with the origin airport you are searching for
              },
              { 
                $group: {
                  _id: null,  // We don't need to group by any specific field
                  destinations: { $addToSet: "$destination.airport" }  // Adds unique destination airports to the array
                }
              }
            ])
  
Query Four: 

  Input: Origin Airport and Destination Airport
  
  Return: For each airline that flys the route return the price, quarter and year
  
  Answer:  db.flightroutes.aggregate([
              {
                $match: {
                  "origin.airport": "CVG",  // Replace "CVG" with the desired origin airport
                  "destination.airport": "LAX"  // Replace "LAX" with the desired destination airport
                }
              },
              {
                $addFields: {
                  averagePrice: {
                    $avg: [
                      { $toDouble: { $ifNull: ["$largestCarrier.fare", 0] } },
                      { $toDouble: { $ifNull: ["$lowestCarrier.fare", 0] } }
                    ]
                  }
                }
              },
              {
                $group: {
                  _id: { year: "$year", quarter: "$quarter" },
                  avgPrice: { $avg: "$averagePrice" },
                  year: { $first: "$year" },
                  quarter: { $first: "$quarter" }
                }
              },
              {
                $project: {
                  _id: 0,
                  year: 1,
                  quarter: 1,
                  averagePrice: "$avgPrice"
                }
              }
            ])

  
Query Five: 

  Input: Origin Airport, Distance, and Price Range
  
  Return: For each quarter match the following fields and return the best match destination
  
  Answer:
  
Query Six: 

  Input: Username, Password
  
  Return: Successful or Not --> If Successful Populate User Information Fields, If not then display message(GUI END)
  
  Answer: